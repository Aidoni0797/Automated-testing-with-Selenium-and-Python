99999998

PyTest - преимущества и недостатки

Для написания данного урока мы вдохновлялись статьёй (https://habr.com/ru/articles/269759/) на Хабре,
адаптировав ее к специфике тестирования веб-приложений с помощью Selenium WebDriver.

Рассмотрим преимущества использования PyTest:

1) PyTest польностью обратно совместим с фреймворками unittest and nosetest. Это означает, что если
изначально вы писали тесты, используя unittest, то перейти на PyTest можно буквально в ту же минуту.
Для этого в вашем виртуальном окружении должен быть установлен пакет PyTest. Не забудьте активировать
ваше виртуальное окружение и установите PyTest.

Для Windows:
> selenium_env\Scripts\activate.bat
(selenium_env) C:\Users\user\environments> pip install pytest==7.1.2

Для Linux and macOS:
$ source selenium_env/bin/activate
(selenium_env) $ pip install pytest==7.1.2

Теперь мы можем запустить тесты в нашем файле test_abs_project.py с помощью PyTest, не изменяя сам
файл. PyTest сам найдёт тесты в папке, в которой вы их запускаете, и выполнит их:

pytest test_abs_project.py

2) Подробный отчёт с поддержкой цветовых схем из коробки.
3) PyTest не требует написания дополнительных специфических конструкций в тестах, как того требует
unittest (no boilerplate).
4) Для проверок используется стандартный assert из Python.
5) Возможность создания динамических фикстур (специальных функций, которые настраивают тестовые
окружения и готовят тестовые данные).
6) Дополнительные возможности по настройке фикстур
