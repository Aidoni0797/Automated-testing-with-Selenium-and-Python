999996

Explicit Waits (WebDriverWait и expected_conditions)

В предыдущем шаге мы решили проблемы с ожиданием элементов на странице. Однако методы find_element
проверяют только то, что элемент появился на странице. В то же время элемент может иметь
дополнительные свойства, которые могут быть важны для наших тестов. Рассмотрим пример с кнопкой,
которая отправляет данные:

- Кнопка может быть неактивной, то есть её нельзя кликнуть;
- Кнопка может содержать текст, который меняется в зависимости от действий пользователя. Например,
текст "Отправить" после нажатия кнопки поменяется на "Отправлено";
- Кнопка может быть перекрыта каким-то другим элементом или быть невидимой.

Если мы хотим в тесте кликнуть на кнопку, а она в этот момент неактивна, то WebDriver все равно
проэмилирует действие нажатия на кнопку, но данные не будут отрпавлены.

Давайте попробуем запустить следующий тест:

from selenium import webdriver
from selenium.webdriver.common.by import By

browser = webdriver.Chrome()
# говорим WebDriver ждать все элементы в течение 5 секунд
browser.implicity_wait(5)

browser.get("http://suninjuly.github.io/wait2.html")

button = browser.find_element(By.ID, "verify")
button.click()
message = browser.find_element(By.ID, "verify_message")

assert "succesful" in message.text

Мы видим, что WebDriver смог найти кнопку с id = "verify" и кликнуть по ней, но тест упал на поиске
элемента "verify_message" с итоговым сообщением:

no such element: Unable to locate element: {"method": "id", "selector": "verify_message"}

Это произошло из-за того, что WebDriver быстро нашел кнопку и кликнул по ней, хотя кнопка была еще неактивной.
На странице мы специально задали программно паузу в 1 секунд после загрузки сайта перед активированием
кнопки, но неактивная кнопка в момент загрузки - обычное дело для реального сайта.

Чтобы тест был надежным, нам нужно не только найти кнопку на странице, но и дождаться, когда кнопка
станет кликабельной. Для реализации подобных ожиданий в Selenium WebDriver существует понятие явных
ожиданий (Explicit Waits), которые позволяют задать специальное ожидание для конкретного элемента.
Задание явных ожиданий реализуется с помощью инструентов WebDriverWait и expected_conditions.
Улучшим наш тест:

from selenium.webdriver.common.by import By
from selenium.webdriver.suppi\ort.ui import WebDrivrWait
