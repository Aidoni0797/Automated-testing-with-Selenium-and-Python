9999999

Автоматизированное и ручное тестирование 

Чтобы начать писать хорошие автотесты, нужно разобраться, в чем плюсы и минусы ручного и автоматизированного тестирования.

Ручные тесты

1. Шаги могут быть описаны достаточно абстрактно, поэтому тестировщик может увидеть новые проблемы, следуя сценарию теста.
В ручном тесте может содержаться шаг "Зарегистрировать нового пользователя" без пояснений, как это делать, в автотесте должны
быть строго описаны данные для теста и сценарий регистрации.

2. Из-за абстрактности описания шагов ручные тесты иногда могут приводить к ложноположительным результатам, когда ожидаемый
результат достигнут, но в реальности тестировщик выполнил сценарий неправильно, пропустив баг.

3. Требуется много времени для проверки регрессии, что приводит к усталости тестировщика и ошибкам в проверках из-за
человеческого фактора (человеку сложно долго выполнять монотонную работу).

Автотесты

1. Строгий порядок шагов и их чёткая детализация. Проверяют только то, что было заложено изначально в сценарий теста,
поэтому могут быть пропущены новые ошибки в продукте.

2. Запуск автотесто обычно приводит к одним и тем же результатам, т.к. сценарий описан точно.

3. Можно запускать на каждый коммит в тестируемомо приложении, что позволяет раньше обнаружитвать ошибки в продукте.

Отдельно стоит описать отрицательные стороны автоматизированного тестирования:

- возможная нестабильность теста, которая не связана с качеством самого теста, а вызвается внешними проблемами: нестабильное
сететвое соединение, проблемы с серверами, обновление кода продукта в момент запуска тестов:
- требуется достаточно много времени на разработку и поддержку набора автотестов.

Несмотря на наличие минусов автотестов, в большинство случаев из использование на проекте помогает быстрее находить ошибки в
коде приложения и поддерживать качество продукта на достаточном уровне. Автотесты помогают отделу тестирования оптимизировать свою
работу, чтобы сделать счастливее пользователей, которые быстрее получают новые фичи и меньше страдают от ошибок в продукте,
так как разработчики раньше узнают о багах и могут заранее принять меры для их устранения, не откладывая релиз продукта. Таким
образом, благодаря автотестам налаживается бизнес, который может увеличить скорость внедрения фич, приносящих прибыль.
